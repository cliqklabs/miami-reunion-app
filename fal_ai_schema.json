{
  "openapi": "3.0.4",
  "info": {
    "title": "Queue OpenAPI for fal-ai/bytedance/seedream/v4/text-to-image",
    "version": "1.0.0",
    "description": "The OpenAPI schema for the fal-ai/bytedance/seedream/v4/text-to-image queue.",
    "x-fal-metadata": {
      "endpointId": "fal-ai/bytedance/seedream/v4/text-to-image",
      "category": "text-to-image",
      "thumbnailUrl": "https://fal.media/files/kangaroo/MTKbHTmLwlCPVvxnEPYVW_cd47bf24871b46af9747a5fcb7f4f97b.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/bytedance/seedream/v4/text-to-image",
      "documentationUrl": "https://fal.ai/models/fal-ai/bytedance/seedream/v4/text-to-image/api"
    }
  },
  "components": {
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Fal Key"
      }
    },
    "schemas": {
      "QueueStatus": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "IN_QUEUE",
              "IN_PROGRESS",
              "COMPLETED"
            ]
          },
          "request_id": {
            "type": "string",
            "description": "The request id."
          },
          "response_url": {
            "type": "string",
            "description": "The response url."
          },
          "status_url": {
            "type": "string",
            "description": "The status url."
          },
          "cancel_url": {
            "type": "string",
            "description": "The cancel url."
          },
          "logs": {
            "type": "object",
            "description": "The logs.",
            "additionalProperties": true
          },
          "metrics": {
            "type": "object",
            "description": "The metrics.",
            "additionalProperties": true
          },
          "queue_position": {
            "type": "integer",
            "description": "The queue position."
          }
        },
        "required": [
          "status",
          "request_id"
        ]
      },
      "BytedanceSeedreamV4TextToImageInput": {
        "title": "SeedDream4T2IInput",
        "type": "object",
        "properties": {
          "prompt": {
            "examples": [
              "Draw a chart showing the typical vegetation distribution in four different climate zones: tropical rainforest, temperate forest, desert, and tundra."
            ],
            "title": "Prompt",
            "type": "string",
            "description": "The text prompt used to generate the image"
          },
          "num_images": {
            "minimum": 1,
            "maximum": 6,
            "type": "integer",
            "title": "Num Images",
            "description": "Number of separate model generations to be run with the prompt.",
            "default": 1
          },
          "image_size": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ImageSize"
              },
              {
                "enum": [
                  "square_hd",
                  "square",
                  "portrait_4_3",
                  "portrait_16_9",
                  "landscape_4_3",
                  "landscape_16_9"
                ],
                "type": "string"
              }
            ],
            "title": "Image Size",
            "description": "The size of the generated image. Width and height must be between 1024 and 4096.",
            "default": {
              "height": 1280,
              "width": 1280
            }
          },
          "max_images": {
            "minimum": 1,
            "maximum": 6,
            "type": "integer",
            "title": "Max Images",
            "description": "If set to a number greater than one, enables multi-image generation. The model will potentially return up to `max_images` images every generation, and in total, `num_images` generations will be carried out. In total, the number of images generated will be between `num_images` and `max_images*num_images`.",
            "default": 1
          },
          "sync_mode": {
            "title": "Sync Mode",
            "type": "boolean",
            "description": "\n            If set to true, the function will wait for the image to be generated and uploaded\n            before returning the response. This will increase the latency of the function but\n            it allows you to get the image directly in the response without going through the CDN.\n        ",
            "default": false
          },
          "enable_safety_checker": {
            "examples": [true],
            "title": "Enable Safety Checker",
            "type": "boolean",
            "description": "If set to true, the safety checker will be enabled.",
            "default": true
          },
          "seed": {
            "title": "Seed",
            "type": "integer",
            "description": "Random seed to control the stochasticity of image generation."
          }
        },
        "x-fal-order-properties": [
          "prompt",
          "image_size",
          "num_images",
          "max_images",
          "seed",
          "sync_mode",
          "enable_safety_checker"
        ],
        "required": [
          "prompt"
        ]
      },
      "BytedanceSeedreamV4TextToImageOutput": {
        "title": "SeedDream4T2IOutput",
        "type": "object",
        "properties": {
          "images": {
            "examples": [
              [
                {
                  "url": "https://storage.googleapis.com/falserverless/example_outputs/seedream4_t2i_output.jpeg"
                }
              ]
            ],
            "title": "Images",
            "type": "array",
            "description": "Generated images",
            "items": {
              "$ref": "#/components/schemas/Image"
            }
          },
          "seed": {
            "examples": [746406749],
            "title": "Seed",
            "type": "integer",
            "description": "Seed used for generation"
          }
        },
        "x-fal-order-properties": [
          "images",
          "seed"
        ],
        "required": [
          "images",
          "seed"
        ]
      },
      "ImageSize": {
        "title": "ImageSize",
        "type": "object",
        "properties": {
          "height": {
            "maximum": 14142,
            "type": "integer",
            "title": "Height",
            "description": "The height of the generated image.",
            "exclusiveMinimum": 0,
            "default": 512
          },
          "width": {
            "maximum": 14142,
            "type": "integer",
            "title": "Width",
            "description": "The width of the generated image.",
            "exclusiveMinimum": 0,
            "default": 512
          }
        },
        "x-fal-order-properties": [
          "width",
          "height"
        ]
      },
      "Image": {
        "description": "Represents an image file.",
        "type": "object",
        "x-fal-order-properties": [
          "url",
          "content_type",
          "file_name",
          "file_size",
          "file_data",
          "width",
          "height"
        ],
        "title": "Image",
        "properties": {
          "file_size": {
            "examples": [4404019],
            "title": "File Size",
            "type": "integer",
            "description": "The size of the file in bytes."
          },
          "height": {
            "examples": [1024],
            "title": "Height",
            "type": "integer",
            "description": "The height of the image in pixels."
          },
          "url": {
            "title": "Url",
            "type": "string",
            "description": "The URL where the file can be downloaded from."
          },
          "width": {
            "examples": [1024],
            "title": "Width",
            "type": "integer",
            "description": "The width of the image in pixels."
          },
          "file_name": {
            "examples": [
              "z9RV14K95DvU.png"
            ],
            "title": "File Name",
            "type": "string",
            "description": "The name of the file. It will be auto-generated if not provided."
          },
          "content_type": {
            "examples": [
              "image/png"
            ],
            "title": "Content Type",
            "type": "string",
            "description": "The mime type of the file."
          },
          "file_data": {
            "format": "binary",
            "title": "File Data",
            "type": "string",
            "description": "File data"
          }
        },
        "required": [
          "url"
        ]
      }
    }
  },
  "paths": {
    "/fal-ai/bytedance/seedream/v4/text-to-image/requests/{request_id}/status": {
      "get": {
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Request ID"
            }
          },
          {
            "name": "logs",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "description": "Whether to include logs (`1`) in the response or not (`0`)."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueueStatus"
                }
              }
            }
          }
        }
      }
    },
    "/fal-ai/bytedance/seedream/v4/text-to-image/requests/{request_id}/cancel": {
      "put": {
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Request ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was cancelled.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the request was cancelled successfully."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fal-ai/bytedance/seedream/v4/text-to-image": {
      "post": {
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BytedanceSeedreamV4TextToImageInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The request status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueueStatus"
                }
              }
            }
          }
        }
      }
    },
    "/fal-ai/bytedance/seedream/v4/text-to-image/requests/{request_id}": {
      "get": {
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Request ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result of the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BytedanceSeedreamV4TextToImageOutput"
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://queue.fal.run"
    }
  ],
  "security": [
    {
      "apiKeyAuth": []
    }
  ]
}